/**
 * Created by rajasekhar on 07-Jun-17.
 */
const logger = require('logger')
const mysql = require('mysql');
const runConfig = require('run-config');
const apiModel = require('publish-swagger-model/api-model');
const config = {
    connectionLimit : runConfig.mysql.connectionLimit,
    host            : runConfig.mysql.host,
    user            : runConfig.mysql.user,
    port            : runConfig.mysql.port,
    password        : runConfig.mysql.password,
    database        : runConfig.mysql.database
};
const  mysqlPool = new mysql.createPool(config);
mysqlPool.on('error', function (err, client) {
    logger.error(err)
    console.error('client error', err.message, err.stack);
});

class  MysqlDBInstance {
// query to create table api_model_revisions
// CREATE TABLE api_model_revisions (model_id  VARCHAR(100),
//                                                 revision_id VARCHAR(100),
//                                                 revision_number int,
//                                                 creation_time VARCHAR(500),
//                                                 author VARCHAR(105),
//                                                 reviewer VARCHAR(105),
//                                                 name VARCHAR(200),
//                                                 product VARCHAR(45),
//                                                 platform VARCHAR(45),
//                                                 swagger_model MEDIUMTEXT,
//                                                 proxyurl VARCHAR(500),
//                                                 isSandBoxAvailable VARCHAR(11),
//                                                 swaggerurl  VARCHAR(450)
    //         );
// query to create table api_model
//     CREATE TABLE api_model (name VARCHAR(500),
//                                         model_id VARCHAR(405),
//                                         latest_revision_number int,
//                                         published_revision_number int,
//                                         isDeleted VARCHAR(45));

}

//execute the query in local-data-base
MysqlDBInstance.prototype.executeQuery = function (config, values, callback) {
    return new Promise(function (resolve, reject) {
        try {
            logger.debug('executing query : '+config+"     , values are "+values)
            var querys = mysqlPool.query(config, values, function (err, result) {
                if (err) {
                    reject({statusCode:500, "message" : "Internal server error"});
                    logger.error("something  went  wrong with database operations ")
                    logger.error(err)
                } else {
                    resolve(result);
                    logger.debug('successfully executed query in locla data base')
                }
            });
        } catch (error) {
            logger.error(error)
            logger.error('not able to execute the query')
            reject(error);
        }
    })
}


//get getRevisionBymodelID
MysqlDBInstance.prototype.getRevisionBymodelID = function (config) {
    var query = "select * from  api_model_revisions where model_id = '"+config[apiModel.model_id]+"' AND  revision_number  ='"+config[apiModel.latest_revision_number]+"'";
    return MysqlDBInstance.prototype.executeQuery(query, [], undefined )
}


//add api-revision
MysqlDBInstance.prototype.addAPIRevision = function (data) {
    var query = 'INSERT into api_model_revisions SET ? ';
    return MysqlDBInstance.prototype.executeQuery(query, data, undefined )
}
MysqlDBInstance.prototype.addAPIModel = function (model) {
    var query = 'INSERT into api_model SET ? ';
    var data = {};
    data[apiModel.model_name] = model.name;
    data[apiModel.model_id] = model.model_id;
    return MysqlDBInstance.prototype.executeQuery(query, data, undefined )
}


module.exports = new MysqlDBInstance();
