/**
 * Created by rajasekhar on 28-Nov-17.
 */
'use strict';
const nodemailer = require('nodemailer');
const runconfig = require("run-config");
let transporter = undefined;
const properties = require('locale-module');
const publishRecordColumns =  require('publish-record-columns');
const logger = require('logger')
function MailOperations() {
    // create reusable transporter object using the default SMTP transport
    // transporter = nodemailer.createTransport(runconfig.mailConfig);
    transporter = nodemailer.createTransport({
        sendmail: true,
        newline: 'unix',
        path: '/usr/local/sbin/sendmail'
    })
}

MailOperations.prototype.sendMail = function (model, revisionNumber) {
    let author = model[publishRecordColumns.author].replace('@247-inc.com','').replace('@247.ai','')
    let reviewer = model[publishRecordColumns.reviewer].replace('@247-inc.com','').replace('@247.ai','')
    let body =  properties.getProperty('emailTemp.body').replace('$reviewer', reviewer).replace('$Sender', author);
    body = body.replace('$Sender', author)
    body = body.replace('$URL', runconfig.deveportal.smartdocs_url+'/'+model[publishRecordColumns.model_id]+'/revisions/'+revisionNumber)
    let mailOptions = {
        from: properties.getProperty('emailTemp.emailFrom'), // sender address
        to: model[publishRecordColumns.author]+','+ model[publishRecordColumns.reviewer], // list of receivers
        subject: properties.getProperty('emailTemp.subject'), // Subject line
        html: body
    };
    // + runconfig.deveportal.smartdocs_url+'/'+model[publishRecordColumns.model_id]+'/revisions/'+revisionNumber + properties.getProperty('emailTemp.note')// html body


    try {
        // send mail with defined transport object
        transporter.sendMail(mailOptions, function (error, info) {
        if (error) {
            logger.info("mail information :"+ JSON.stringify(mailOptions))
            logger.error('un-able to send the mail to  : '+mailOptions.to);
            logger.error('Reason ::   : '+JSON.stringify(error));
            return ;
        }
        logger.info("mail information :"+ JSON.stringify(mailOptions))
        });
    }catch (error){
        logger.error(error);
    }
};

module.exports = new  MailOperations ();